{
  "ver": "1.0.25",
  "uuid": "b5cbf6d2-83e8-47fa-bf48-64310c322f9d",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_uv0;\nattribute vec2 a_xrange;\nattribute vec2 a_yrange;\nvarying vec2 v_uv0;\nvarying vec2 v_xrange;\nvarying vec2 v_yrange;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_xrange = a_xrange;\n  v_yrange = a_yrange;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec2 v_uv0;\nvarying vec2 v_xrange;\nvarying vec2 v_yrange;\nuniform sampler2D texture;\nfloat Remap01(float a, float b, float t) {\n  return (t-a) / (b-a);\n}\nfloat Remap(float a, float b, float c, float d, float t) {\n  return Remap01(a, b, t) * (d-c) + c;\n}\nvoid main () {\n  vec2 uv = v_uv0.xy;\n  vec4 col = texture2D(texture, uv);\n  uv.x = Remap(v_xrange.x, v_xrange.y, 0., 1., uv.x);\n  uv.y = Remap(v_yrange.x, v_yrange.y, 0., 1., uv.y);\n  float d = distance(uv, vec2(0.5, 0.5));\n  float mask = smoothstep(0.51, 0.49, d);\n  col.a = mask;\n  gl_FragColor = col;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec2 a_uv0;\nin vec2 a_xrange;\nin vec2 a_yrange;\nout vec2 v_uv0;\nout vec2 v_xrange;\nout vec2 v_yrange;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv0 = a_uv0;\n  v_xrange = a_xrange;\n  v_yrange = a_yrange;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec2 v_uv0;\nin vec2 v_xrange;\nin vec2 v_yrange;\nuniform sampler2D texture;\nfloat Remap01(float a, float b, float t) {\n  return (t-a) / (b-a);\n}\nfloat Remap(float a, float b, float c, float d, float t) {\n  return Remap01(a, b, t) * (d-c) + c;\n}\nvoid main () {\n  vec2 uv = v_uv0.xy;\n  vec4 col = texture(texture, uv);\n  uv.x = Remap(v_xrange.x, v_xrange.y, 0., 1., uv.x);\n  uv.y = Remap(v_yrange.x, v_yrange.y, 0., 1., uv.y);\n  float d = distance(uv, vec2(0.5, 0.5));\n  float mask = smoothstep(0.51, 0.49, d);\n  col.a = mask;\n  gl_FragColor = col;\n}"
      }
    }
  ],
  "subMetas": {}
}