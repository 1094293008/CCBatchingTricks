// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  
 
CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
}%
 
 
CCProgram vs %{
  precision highp float;
 
  #include <cc-global>
  #include <cc-local>
 
  in vec3 a_position;
  in vec2 a_uv0;
  in vec2 a_xrange;
  in vec2 a_yrange;
  out vec2 v_uv0;
  out vec2 v_xrange;
  out vec2 v_yrange;
 
  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * pos;
 
    v_uv0 = a_uv0;
    v_xrange = a_xrange;
    v_yrange = a_yrange; 
    gl_Position = pos;
  }
}%
 
 
CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>
  #include <cc-global>
  #include <cc-local>
 
  in vec2 v_uv0;
  in vec2 v_xrange;
  in vec2 v_yrange;
  uniform sampler2D texture;

  float Remap01(float a, float b, float t) {
    return (t-a) / (b-a);
  }

  float Remap(float a, float b, float c, float d, float t) {
    return Remap01(a, b, t) * (d-c) + c;
  }
   
  void main () {
    vec2 uv = v_uv0.xy;
    vec4 col = texture(texture, uv);
 
    // uv *= v_ratio;
    uv.x = Remap(v_xrange.x, v_xrange.y, 0., 1., uv.x);
    uv.y = Remap(v_yrange.x, v_yrange.y, 0., 1., uv.y);
    float d = distance(uv, vec2(0.5, 0.5));
    float mask = smoothstep(0.51, 0.49, d);
    col.a = mask;
 
    gl_FragColor = col;
  }
}%
 
