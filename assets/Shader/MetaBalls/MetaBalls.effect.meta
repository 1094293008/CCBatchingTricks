{
  "ver": "1.0.25",
  "uuid": "47b94ccc-24dc-48e1-89cd-bcefeade8b68",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_center;\nvarying vec2 v_pos;\nvarying vec2 v_center;\nvoid main() {\n  vec4 pos = vec4(a_position, 1.0);\n  pos = cc_matViewProj * pos;\n  vec4 center = vec4(a_center, 0.0, 1.0);\n  center = cc_matViewProj * center;\n  v_pos = pos.xy;\n  v_center = center.xy;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nvarying vec2 v_pos;\nvarying vec2 v_center;\nuniform float yratio;\nuniform float radius;\nuniform sampler2D texture;\nvoid main()\n{\n  vec2 uv = v_pos;\n  uv.y *= yratio;\n  vec2 center = v_center;\n  center.y *= yratio;\n  float mask = 1.0 - step(radius, distance(uv, center));\n  vec4 col = mix(vec4(0.), vec4(0., 0.553, 1.0, 1.0), mask);\n  gl_FragColor = col;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec2 a_center;\nout vec2 v_pos;\nout vec2 v_center;\nvoid main() {\n  vec4 pos = vec4(a_position, 1.0);\n  pos = cc_matViewProj * pos;\n  vec4 center = vec4(a_center, 0.0, 1.0);\n  center = cc_matViewProj * center;\n  v_pos = pos.xy;\n  v_center = center.xy;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec2 v_pos;\nin vec2 v_center;\nuniform ARGS {\n  float yratio;\n  float radius;\n};\nuniform sampler2D texture;\nvoid main()\n{\n  vec2 uv = v_pos;\n  uv.y *= yratio;\n  vec2 center = v_center;\n  center.y *= yratio;\n  float mask = 1.0 - step(radius, distance(uv, center));\n  vec4 col = mix(vec4(0.), vec4(0., 0.553, 1.0, 1.0), mask);\n  gl_FragColor = col;\n}"
      }
    }
  ],
  "subMetas": {}
}